{"ast":null,"code":"var _jsxFileName = \"/home/kaisj/projects/xflynx25.github.io/react_gitweb/src/components/Hangman.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../stylesheets/Hangman.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Hangman(_ref) {\n  _s();\n  let {\n    word\n  } = _ref;\n  const [guesses, setGuesses] = useState(new Set());\n  const [incorrectGuesses, setIncorrectGuesses] = useState(0);\n  const [guessedLetters, setGuessedLetters] = useState('');\n\n  // Split the word into an array of letters and spaces\n  const wordArray = word.toLowerCase().split('');\n  console.log(wordArray);\n\n  // Build a string to display the word with guessed letters\n  const displayString = wordArray.reduce((acc, letter) => {\n    if (letter === ' ') {\n      return acc + ' ';\n    } else if (guesses.has(letter)) {\n      return acc + letter;\n    } else {\n      return acc + '_';\n    }\n  }, '');\n\n  // Check if the player has won (all letters have been guessed)\n  const hasWon = wordArray.every(letter => guesses.has(letter) || letter === ' ');\n\n  // Check if the player has lost (exceeded maximum incorrect guesses)\n  const hasLost = incorrectGuesses >= 5;\n\n  // Define the hangman ASCII art\n  const hangmanArt = ['_______', '|      |', '|      O', ' |     /|\\\\', ' |     / \\\\', '|       '];\n\n  // Slice the hangman art to show only the relevant body parts\n  const visibleHangman = hangmanArt.slice(0, incorrectGuesses + 1).join('\\n');\n\n  // Handle a player's guess\n  const handleGuess = event => {\n    // Ignore duplicate guesses\n    const letter = event.key.toLowerCase();\n    if (guesses.has(letter)) {\n      return;\n    }\n\n    // Add the guess to the set of guesses\n    const newGuesses = new Set(guesses);\n    newGuesses.add(letter);\n    setGuesses(newGuesses);\n\n    // Increment the number of incorrect guesses if the guess is incorrect\n    if (!wordArray.includes(letter)) {\n      setIncorrectGuesses(incorrectGuesses + 1);\n    }\n\n    // Convert the Set of guessed letters to a string\n    const guessedLettersString = Array.from(newGuesses).join('');\n    setGuessedLetters(guessedLettersString);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hangman-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hangman-art\",\n      children: visibleHangman\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"middle-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stack-middle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-text\",\n          children: \"Was ist prompt?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"guessed-letters\",\n          children: [\"Guessed letters: \", guessedLetters]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hangman-word\",\n          children: displayString\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"middle-bottom\",\n        children: [!hasWon && !hasLost && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hangman-input-container\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"hangman-input\",\n            type: \"text\",\n            maxLength: \"1\",\n            onKeyDown: e => e.key.length === 1 && handleGuess(e),\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), hasWon && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-over-message win\",\n          children: \"You win!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 28\n        }, this), hasLost && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"game-over-message loss\",\n          children: \"You lose!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(Hangman, \"qSeS/SQssXhtLD7RAKwqUSWcP70=\");\n_c = Hangman;\nexport default Hangman;\nvar _c;\n$RefreshReg$(_c, \"Hangman\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Hangman","_ref","_s","word","guesses","setGuesses","Set","incorrectGuesses","setIncorrectGuesses","guessedLetters","setGuessedLetters","wordArray","toLowerCase","split","console","log","displayString","reduce","acc","letter","has","hasWon","every","hasLost","hangmanArt","visibleHangman","slice","join","handleGuess","event","key","newGuesses","add","includes","guessedLettersString","Array","from","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","maxLength","onKeyDown","e","length","autoFocus","_c","$RefreshReg$"],"sources":["/home/kaisj/projects/xflynx25.github.io/react_gitweb/src/components/Hangman.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../stylesheets/Hangman.css';\n\nfunction Hangman({ word }) {\n  const [guesses, setGuesses] = useState(new Set());\n  const [incorrectGuesses, setIncorrectGuesses] = useState(0);\n  const [guessedLetters, setGuessedLetters] = useState('');\n\n  // Split the word into an array of letters and spaces\n  const wordArray = word.toLowerCase().split('');\n  console.log(wordArray)\n\n    // Build a string to display the word with guessed letters\n    const displayString = wordArray.reduce((acc, letter) => {\n        if (letter === ' ') {\n        return acc + ' ';\n        } else if (guesses.has(letter)) {\n        return acc + letter;\n        } else {\n        return acc + '_';\n        }\n    }, '');\n\n  // Check if the player has won (all letters have been guessed)\n  const hasWon = wordArray.every((letter) => guesses.has(letter) || letter === ' ');\n\n  // Check if the player has lost (exceeded maximum incorrect guesses)\n  const hasLost = incorrectGuesses >= 5;\n\n  // Define the hangman ASCII art\n  const hangmanArt = [\n    '_______',\n    '|      |',\n    '|      O',\n    ' |     /|\\\\',\n    ' |     / \\\\',\n    '|       ',\n  ];\n\n  // Slice the hangman art to show only the relevant body parts\n  const visibleHangman = hangmanArt.slice(0, incorrectGuesses + 1).join('\\n');\n\n\n  // Handle a player's guess\n  const handleGuess = (event) => {\n    // Ignore duplicate guesses\n    const letter = event.key.toLowerCase();\n    if (guesses.has(letter)) {\n      return;\n    }\n\n    // Add the guess to the set of guesses\n    const newGuesses = new Set(guesses);\n    newGuesses.add(letter);\n    setGuesses(newGuesses);\n\n    // Increment the number of incorrect guesses if the guess is incorrect\n    if (!wordArray.includes(letter)) {\n      setIncorrectGuesses(incorrectGuesses + 1);\n    }\n\n    // Convert the Set of guessed letters to a string\n    const guessedLettersString = Array.from(newGuesses).join('');\n    setGuessedLetters(guessedLettersString);\n  };\n\n  return (\n    <div className=\"hangman-container\">\n      <div className=\"hangman-art\">{visibleHangman}</div>\n      <div className='middle-container'>\n        <div className='stack-middle'>\n            <div className=\"prompt-text\">Was ist prompt?</div> \n            <div className='guessed-letters'>Guessed letters: {guessedLetters}</div>\n            <div className=\"hangman-word\">\n            {displayString}\n            </div>\n        </div>\n        <div className='middle-bottom'>\n                {!hasWon && !hasLost && (\n                    <div className=\"hangman-input-container\">\n                    <input\n                        className=\"hangman-input\"\n                        type=\"text\"\n                        maxLength=\"1\"\n                        onKeyDown={(e) => e.key.length === 1 && handleGuess(e)}\n                        autoFocus\n                    />\n                    </div>\n                )}\n                {hasWon && <p className='game-over-message win'>You win!</p>}\n                {hasLost && <p className='game-over-message loss'>You lose!</p>}\n        </div>\n      </div>\n      <div></div>\n    </div>\n  );\n}\n\nexport default Hangman;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}