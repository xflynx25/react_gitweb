{"ast":null,"code":"var _jsxFileName = \"/home/kaisj/projects/xflynx25.github.io/react_gitweb/src/components/RandomImage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport getHourlyPseudoRandomIdx from './helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RandomImage() {\n  _s();\n  const [imageSrc, setImageSrc] = useState(null);\n  const [images, setImages] = useState([]);\n\n  // Function to randomly select an image from the array\n  const getRandomImage = () => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    const randomImage = images[randomIndex];\n    return require(`../assets/img/ai/${randomImage}`);\n  };\n\n  // Get the image file names when the component mounts\n  useEffect(() => {\n    const context = require.context(\"../assets/img/ai\", false, /\\.(png|jpe?g|gif|svg)$/);\n    const imageNames = context.keys().map(key => key.replace(/^.*[\\\\/]/, ''));\n    setImages(imageNames);\n  }, []);\n\n  // Set the image source when the component mounts or when the images array changes\n  useEffect(() => {\n    console.log(images);\n    if (images.length > 0) {\n      const randomImageidx = getHourlyPseudoRandomIdx(images.length);\n      const randomImageSrc = images[randomImageidx];\n      setImageSrc(randomImageSrc);\n    }\n  }, [images]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: imageSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: imageSrc,\n      alt: \"Random Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 20\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(RandomImage, \"bBFMQABJGvv2mNgDgff4NybJT1o=\");\n_c = RandomImage;\nexport default RandomImage;\nvar _c;\n$RefreshReg$(_c, \"RandomImage\");","map":{"version":3,"names":["React","useState","useEffect","getHourlyPseudoRandomIdx","jsxDEV","_jsxDEV","RandomImage","_s","imageSrc","setImageSrc","images","setImages","getRandomImage","randomIndex","Math","floor","random","length","randomImage","require","context","imageNames","keys","map","key","replace","console","log","randomImageidx","randomImageSrc","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/kaisj/projects/xflynx25.github.io/react_gitweb/src/components/RandomImage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport getHourlyPseudoRandomIdx from './helpers';\n\nfunction RandomImage() {\n  const [imageSrc, setImageSrc] = useState(null);\n  const [images, setImages] = useState([]);\n\n  // Function to randomly select an image from the array\n  const getRandomImage = () => {\n    const randomIndex = Math.floor(Math.random() * images.length);\n    const randomImage = images[randomIndex];\n    return require(`../assets/img/ai/${randomImage}`)\n  };\n\n  // Get the image file names when the component mounts\n  useEffect(() => {\n    const context = require.context(\"../assets/img/ai\", false, /\\.(png|jpe?g|gif|svg)$/);\n    const imageNames = context.keys().map((key) => key.replace(/^.*[\\\\/]/, ''));\n    setImages(imageNames);\n  }, []);\n\n  // Set the image source when the component mounts or when the images array changes\n  useEffect(() => {\n    console.log(images)\n    if (images.length > 0) {\n      const randomImageidx = getHourlyPseudoRandomIdx(images.length);\n      const randomImageSrc = images[randomImageidx]\n      setImageSrc(randomImageSrc);\n    }\n  }, [images]);\n\n  return (\n    <div>\n      {imageSrc && <img src={imageSrc} alt=\"Random Image\" />}\n    </div>\n  );\n}\n\nexport default RandomImage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,wBAAwB,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAGN,MAAM,CAACO,MAAM,CAAC;IAC7D,MAAMC,WAAW,GAAGR,MAAM,CAACG,WAAW,CAAC;IACvC,OAAOM,OAAO,CAAE,oBAAmBD,WAAY,EAAC,CAAC;EACnD,CAAC;;EAED;EACAhB,SAAS,CAAC,MAAM;IACd,MAAMkB,OAAO,GAAGD,OAAO,CAACC,OAAO,CAAC,kBAAkB,EAAE,KAAK,EAAE,wBAAwB,CAAC;IACpF,MAAMC,UAAU,GAAGD,OAAO,CAACE,IAAI,EAAE,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IAC3Ed,SAAS,CAACU,UAAU,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAnB,SAAS,CAAC,MAAM;IACdwB,OAAO,CAACC,GAAG,CAACjB,MAAM,CAAC;IACnB,IAAIA,MAAM,CAACO,MAAM,GAAG,CAAC,EAAE;MACrB,MAAMW,cAAc,GAAGzB,wBAAwB,CAACO,MAAM,CAACO,MAAM,CAAC;MAC9D,MAAMY,cAAc,GAAGnB,MAAM,CAACkB,cAAc,CAAC;MAC7CnB,WAAW,CAACoB,cAAc,CAAC;IAC7B;EACF,CAAC,EAAE,CAACnB,MAAM,CAAC,CAAC;EAEZ,oBACEL,OAAA;IAAAyB,QAAA,EACGtB,QAAQ,iBAAIH,OAAA;MAAK0B,GAAG,EAAEvB,QAAS;MAACwB,GAAG,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAG;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClD;AAEV;AAAC7B,EAAA,CAjCQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAmCpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}